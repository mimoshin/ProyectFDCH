# Generated by Django 3.1.7 on 2021-10-26 03:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('athlete', '0001_initial'),
        ('championship', '0002_auto_20211025_2039'),
    ]

    operations = [
        migrations.CreateModel(
            name='Competitions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField(choices=[(0, 'DEFAULT'), (1, 'SERIE'), (2, 'SEMIFINAL'), (3, 'FINAL')], default=0)),
                ('hour', models.TimeField(default='08:00:00')),
                ('category', models.IntegerField(default=0)),
                ('gender', models.IntegerField(choices=[(0, 'DEFAULT'), (1, 'DAMAS'), (2, 'VARONES')], default=0)),
                ('combinated', models.IntegerField(choices=[(0, 'NO'), (1, 'HEXATLON'), (2, 'DECATLON'), (3, 'DEFAULT')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventName', models.CharField(default='Evento', max_length=200)),
                ('eventType', models.IntegerField(choices=[(0, 'DEFAULT'), (1, 'VELOCIDAD'), (2, 'MEDIOFONDO'), (3, 'SALTO'), (4, 'GARROCHA'), (5, 'LANZAMIENTO')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='JumpParticipation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JumpPoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MidPoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpeedPoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Throw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThrowPoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThrowHeats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numberHeat', models.IntegerField(default=0)),
                ('observation', models.CharField(default='S/0', max_length=200)),
                ('competitionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='throwheats', to='competition.competitions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThrowAssignments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personalBest', models.CharField(default='N/R', max_length=200)),
                ('result', models.CharField(default=' ', max_length=200)),
                ('place', models.IntegerField(default=0)),
                ('athleteId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='throwassignments', to='athlete.athletes')),
                ('heatId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asigned', to='competition.throwheats')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpeedHeats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numberHeat', models.IntegerField(default=0)),
                ('observation', models.CharField(default='S/0', max_length=200)),
                ('wind', models.CharField(default='N/R', max_length=4)),
                ('competitionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='speedheats', to='competition.competitions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpeedAssignments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personalBest', models.CharField(default='N/R', max_length=200)),
                ('result', models.CharField(default=' ', max_length=200)),
                ('place', models.IntegerField(default=0)),
                ('line', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(8)])),
                ('athleteId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='speedassignments', to='athlete.athletes')),
                ('heatId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asigned', to='competition.speedheats')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MidHeats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numberHeat', models.IntegerField(default=0)),
                ('observation', models.CharField(default='S/0', max_length=200)),
                ('competitionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='midheats', to='competition.competitions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MidAssignments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personalBest', models.CharField(default='N/R', max_length=200)),
                ('result', models.CharField(default=' ', max_length=200)),
                ('place', models.IntegerField(default=0)),
                ('athleteId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='midassignments', to='athlete.athletes')),
                ('heatId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asigned', to='competition.midheats')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JumpHeats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numberHeat', models.IntegerField(default=0)),
                ('observation', models.CharField(default='S/0', max_length=200)),
                ('competitionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jumpheats', to='competition.competitions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JumpAssignments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personalBest', models.CharField(default='N/R', max_length=200)),
                ('result', models.CharField(default=' ', max_length=200)),
                ('place', models.IntegerField(default=0)),
                ('athleteId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jumpassignments', to='athlete.athletes')),
                ('heatId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asigned', to='competition.jumpheats')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Inscriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personalBest', models.CharField(default='N/R', max_length=200)),
                ('athleteId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='athlete.athletes')),
                ('competitionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition.competitions')),
            ],
        ),
        migrations.AddField(
            model_name='competitions',
            name='eventId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition.events'),
        ),
        migrations.AddField(
            model_name='competitions',
            name='stageId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='championship.stages'),
        ),
    ]
